#!/bin/sh

set -eu -o pipefail
exec 3>&1 1>&2

 . /opt/resource/common

DEST="$1"

payload=$(mktemp /tmp/resource-in.XXXXXX)
cat > "${payload}" <&0

DEBUG=$(jq -r '.source.debug // false' < "${payload}")
if [ $DEBUG == "true" ]; then
  set -x
fi
echo "1"
if [ $DEBUG == "true" ]; then
  echo $DEST
fi

version=$(jq -r '.version.image' < "${payload}")

region=$(jq -r '.source.region // ""' < "${payload}")
if [ -z "$region" ]; then
  region=$GCP_REGION
fi

if [ -z "$region" ]; then
    echo "Resource configuration error. Unable to determine GCP region"
  exit 1
fi

credentials=$(jq -r '.source.credentials // ""' < "${payload}")
if [ -z "${credentials}" ]; then
  echo "Resource configuration error. Unable to connect to gcloud api.  Please include credentials."
  exit 1
else
  saveGCloudJsonKey "${credentials}"
  activateGCloudAccount
fi

extraargs=""
project=$(jq -r '.source.project // ""' < "${payload}")
if [ ! -z "${project}" ]; then
   extraargs="${extraargs}--project=${project}"
fi

gcloud compute images list --filter="name:${version}" --format="json" ${extraargs} > "$DEST/image.json"

echo ${version} > $DEST/version.txt
jq -n --arg version "$version" '{"image":$version}' > $DEST/version.json


jq '{"version": {"image": .[0].name}, "metadata": [{"name": "id", "value": .[0].id},{"name": "family", "value": .[0].family},{"name": "creation_ts", "value": .[0].creationTimestamp},{"name": "self_link", "value": .[0].selfLink}]}' < "$DEST/image.json" >&3
