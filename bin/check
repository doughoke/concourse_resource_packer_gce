#!/bin/sh

set -eu -o pipefail
exec 3>&1 1>&2

#. /opt/resource/common

payload=$(mktemp /tmp/resource-check.XXXXXX)
cat > "${payload}" <&0

DEBUG=$(jq -r '.source.debug // false' < "${payload}")
if [ $DEBUG == "true" ]; then
  set -x
fi

region=$(jq -r '.source.region // ""' < "${payload}")
if [ -z "$region" ]; then
  region=$GCP_REGION
fi

if [ -z "$region" ]; then
  echo "Resource configuration error. Unable to determine GCP region"
  exit 1
fi

family=$(jq -r '.params.family // ""' < "${payload}")
if [ -z "${family}" ]; then
  echo "paramater on get configuration error. Unable to determine image family: param on get:"
  echo "EXAMPLE:"
  echo "get: image-resource-name"
  echo "params:"
  echo "  family: my-image-family"
  exit 1
fi


credentials=$(jq -r '.source.credentials // ""' < "${payload}")
if [ -z "${credentials}" ]; then
  echo "Resource configuration error. Unable to connect to gcloud api.  Please include credentials."
  exit 1
else
  saveGCloudJsonKey "${credentials}"
  activateGCloudAccount
fi

# --optional resource configs
extraargs=""
project=$(jq -r '.source.project // ""' < "${payload}")
if [ ! -z "${project}" ]; then
   extraargs="${extraargs}--project=\"${project}\""
fi


gcloud compute images list --filter="family:${family}" --format="json" --sort-by="creation_date" ${extraargs} | jq 'map({ "image": .})' >&3
#aws ec2 describe-images --region $region $owners $executable_users $filters_param "${filters[@]}" --query "sort_by(Images, &CreationDate)[].ImageId" | jq 'map({ "ami": .})' >&3
